/*! \file
    The Doxygen document for the main page.

    Copyright (C) 2007-2018 kaoru

    $Id$
*/

/*! \mainpage

What is Bobura? {#what_is_bobura}
===============

Bobura is some software about railways.


Requirements {#requirements}
============

Bobura application
------------------

- [Windows 7](https://www.microsoft.com/) or later

Bobura libraries
----------------

The libraries are available on Windows and UNIX-like systems.

It's tested on the following systems:

- [Windows 10](https://www.microsoft.com/)
- [Debian GNU/Linux 9](https://www.debian.org/)


How to Build {#how_to_build}
============

Building on Windows
-------------------

You need the following tools in order to build Bobura:

- [Visual Studio 2017 Update 6](https://www.microsoft.com/)
- [Boost C++ Libraries 1.66.0](https://www.boost.org/)
- [bzip2](https://www.bzip.org)
- [WiX 3.11.0](https://wixtoolset.org/)
- Windows Subsystem for Linux
  - [GNU Make](https://www.gnu.org/)
  - [include-what-you-use 3.9](https://include-what-you-use.org/)
  - [ClangFormat 5.0](https://clang.llvm.org/docs/ClangFormat.html)
  - [Dos2Unix](https://waterlan.home.xs4all.nl/dos2unix.html)
  - [Doxygen 1.8.14](http://www.doxygen.org)
  - [Graphviz](https://www.graphviz.org)

You can obtain the source code either by downloading an archive or by cloning the Git repository.

### Downloading the Source Code Archive

The latest archives can be downloaded from [the web site](https://www.tetengo.org/).

Deploy the Tetengo2 libraries as a submodule. Get the Tetengo2 archive in [the web site](https://www.tetengo.org/),
unpack the archive, execute

~~~~{.bat}
X:\path\to\bobura> mkdir lib\tetengo2
~~~~

in the top directory of Bobura, and copy the contents of the Tetengo2 archive to the directory `lib/tetengo2`.

### Cloning the Repository

You can clone the Git repository like this:

~~~~{.sh}
$ git clone https://github.com/kaorut/bobura.git
~~~~

Then, run the following commands when you clone the Git repository in order to get the Tetengo2 libaries:

~~~~{.bat}
X:\path\to\bobura> git submodule update --init
X:\path\to\bobura> git submodule foreach 'git checkout master & git pull'
~~~~

### Build Sequence

First make a copy of `bobura_config.h-original` in the top source directory and name it `bobura_config.h`.
Edit `bobura_config.h` according to your environment.

Open `bobura.sln` with Visual Studio and build the solution in order to build Bobura and run the unit tests.

To generate API documents, open Command Prompt and run `doxygen` command in the top source directory:

~~~~{.bat}
X:\path\to\bobura> doxygen
~~~~

Building on UNIX
----------------

On UNIX, we cannot build a Bobura executable yet. However, we can build the Bobura libraries and use them.

You need the following tools in order to build Bobura libraries:

- [GCC 6.3.0](https://www.gnu.org/) or [Clang 5.0](https://clang.llvm.org/)
- [GNU Make](https://www.gnu.org/)
- [Boost C++ Libraries 1.66.0](https://www.boost.org/)
- [bzip2](https://www.bzip.org)
- [include-what-you-use 3.9](https://include-what-you-use.org/)
- [ClangFormat 5.0](https://clang.llvm.org/docs/ClangFormat.html)
- [Dos2Unix](https://waterlan.home.xs4all.nl/dos2unix.html)
- [Doxygen 1.8.14](http://www.doxygen.org)
- [Graphviz](https://www.graphviz.org)

You can obtain the source code either by downloading an archive or by cloning the Git repository.

### Downloading the Source Code Archive

The latest archives can be downloaded from [the web site](https://www.tetengo.org/).

Get the Tetengo2 archive from the web site.
[Build the Tetengo libraries and install it](https://www.tetengo.org/jenkins/view/Tetengo2/job/tetengo2-master-linux-doc/lastSuccessfulBuild/artifact/doc/index.html#how_to_build).

### Cloning the Repository

You can clone the Git repository like this:

~~~~{.sh}
$ git clone https://github.com/kaorut/bobura.git
~~~~

Then, run the following commands when you clone the Git repository in order to get the Tetengo2 libaries:

~~~~{.sh}
$ git submodule update --init
$ git submodule foreach 'git checkout master && git pull'
~~~~

Run `bootstrap.sh` to produce the `configure` script:

~~~~{.sh}
$ ./bootstrap.sh
~~~~

`bootstrap.sh` requires the following tools:

- [Autotools (Autoconf, Automake, etc.)](https://www.gnu.org/)
- [Autoconf Archive](https://www.gnu.org/)

### Build Sequence

Run `configure` to generate Makefiles. `--enable-precompilation` enables precompilation.

In case you downloaded the source code archive and Tetengo2 is installed in the directory `/usr/local`:

~~~~{.sh}
$ ./configure --with-tetengo2=/usr/local [--enable-precompilation]
~~~~

In case you cloned the Git repository and checked Tetengo2 out as a submodule:

~~~~{.sh}
$ ./configure --with-tetengo2=SUBMODULE [--enable-precompilation]
~~~~

To install the libraries to your system, run make like this:

~~~~{.sh}
$ make
$ sudo make install
~~~~

The following instruction tests the Bobura libraries:

~~~~{.sh}
$ make check
~~~~

The API documents are generated by the following:

~~~~{.sh}
$ make doc
~~~~


------------------------------------------------------------------------------

Copyright (C) 2007-2018 kaoru

<https://www.tetengo.org/>

$Id$

*/
