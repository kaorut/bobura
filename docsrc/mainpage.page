/*! \file
    The Doxygen document for the main page.

    Copyright (C) 2007-2013 kaoru

    $Id$
*/

/*! \mainpage

What is Bobura? {#what_is_bobura}
===============

Bobura is some software about railways.


What is Tetengo2? {#what_is_tetengo2}
=================

Tetengo2 is a kind of GUI toolkit.


Requirements {#requirements}
============

Bobura application
------------------

- Windows 7 or later

Bobura and Tetengo2 libraries
-----------------------------

The libraries is available on Windows and UNIX-like systems.

It's tested on the following systems:

- Windows 7 Service Pack 1
- Debian GNU/Linux 7.0
- Cygwin 1.7.17

How to Build {#how_to_build}
============

Only the source code of Bobura and Tetengo2 are distributed for the time being.
You can obtain the source code either by downloading an archive or by cloning the Git repository.

Downloading the Source Code Archive
-----------------------------------

The latest archives can be downloaded from [the web site](http://www.tetengo.org/).

Cloning the Repository
----------------------

You can clone the Git repository like this:

~~~~{.sh}
$ git clone http://github.com/kaorut/bobura.git
~~~~

Building on Windows
-------------------

You need the following tools in order to build Bubura and Tetengo2:

- [Visual Studio 2012 Update 2](http://www.microsoft.com/) (including Express for Desktop)
- [Boost C++ Libraries 1.53.0](http://www.boost.org/)
- [bzip2](http://www.bzip.org)
- [Doxygen 1.8.4](http://www.doxygen.org) (to generate API documents)
- [Graphviz](http://www.graphviz.org) (to generate API documents)

First make a copy of `bobura_config.h-original` in the top source directory and name it `bobura_config.h`.
Edit `bobura_config.h` according to your environment.

Open `bobura.sln` with Visual Studio and build the solution in order to build Bubura and run the unit tests.

To generate API documents, open Command Prompt and run `doxygen` command in the top source directory:

~~~~{.bat}
X:\path\to\bobura> doxygen
~~~~

Building on UNIX
----------------

On UNIX, we cannot build a Bobura executable yet. However, we can build the Bubura and Tentengo2 libraries and use
them.

You need the following tools in order to build Bubura and Tetengo2 libraries:

- [GCC 4.7.2](http://www.gnu.org/)
- [GNU Make](http://www.gnu.org/)
- [Boost C++ Libraries 1.53.0](http://www.boost.org/)
- [bzip2](http://www.bzip.org)
- [Doxygen 1.8.4](http://www.doxygen.org) (to generate API documents)
- [Graphviz](http://www.graphviz.org) (to generate API documents)

When you clone the Git repository, you will not find the `configure` script in the working copy.
Run `bootstrap.sh` to produce the `configure` script. `bootstrap.sh` requires the following tools:

- [Autotools (Autoconf, Automake, etc.)](http://www.gnu.org/)
- [Autoconf Archive](http://www.gnu.org/)

~~~~{.sh}
$ ./bootstrap.sh
~~~~

Run `configure` to generate Makefiles. `--enable-precompilation` enables precompilation by generating `.gch` files.
On some platform such as Linux, you have to link to librt.

~~~~{.sh}
$ ./configure [--enable-precompilation] [LIBS=-lrt]
~~~~
To install the libraries to your system, run make like this:

~~~~{.sh}
$ make
$ sudo make install
~~~~

The following instruction tests the Bobura and Tetengo2 libraries:

~~~~{.sh}
$ make check
~~~~

The API documents are generated by the following:

~~~~{.sh}
$ make doc
~~~~


------------------------------------------------------------------------------

Copyright (C) 2007-2013 kaoru

<http://www.tetengo.org/>

$Id$

*/
